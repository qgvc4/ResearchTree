{"version":3,"sources":["actions/ApiConstant.js","actions/AccountAction.js","actions/types.js","components/Account/Login.jsx","declaration/major.js","declaration/standing.js","components/Account/Signup.jsx","components/Navbar.jsx","actions/FeedAction.js","components/Feed/FeedCard.jsx","components/Feed/FeedList.jsx","components/Feed/PostFeed.jsx","components/Feed/Feed.jsx","components/Feed/FeedWithLayout.jsx","components/People/PeopleCard.jsx","components/People/PeopleList.jsx","actions/PeopleAction.js","components/People/People.jsx","components/People/PeopleWithLayout.jsx","components/Profile/EditPost.jsx","components/Profile/UserFeedCard.jsx","components/Profile/UserFeedList.jsx","actions/JobAction.js","components/Profile/EditJob.jsx","components/Profile/UserJobCard.jsx","components/Profile/UserJobList.jsx","components/Profile/UserInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileWithLayout.jsx","components/Job/JobCard.jsx","components/Job/JobList.jsx","components/Job/PostJob.jsx","components/Job/Job.jsx","components/Job/JobWithLayout.jsx","reducers/AccountReducer.js","reducers/FeedReducer.js","reducers/PeopleReducer.js","reducers/JobReducer.js","reducers/index.js","store.js","index.js"],"names":["API_BASE","clearError","dispatch","type","payload","Content","Layout","Login","handleSubmit","e","preventDefault","_this","props","form","validateFields","err","values","login","this","error","user","token","react_default","a","createElement","Redirect","to","getFieldDecorator","es_alert","message","layout","className","style","background","padding","textAlign","color","es_form","onSubmit","Item","rules","required","input","prefix","icon","placeholder","es_button","htmlType","href","Component","LoginForm","Form","create","name","connect","state","userCredential","fetch","concat","method","headers","Accept","content-type","body","JSON","stringify","then","res","json","catch","Majors","Standings","Option","Select","Signup","confirmDirty","image","validateFieldsAndScroll","Standing","Promise","resolve","reject","reader","FileReader","addEventListener","imageData","result","split","readAsDataURL","signup","handleConfirmBlur","value","target","setState","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","test","force","validateLocationZipCode","validateMajorsMaxLimit","length","normFile","Array","isArray","history","push","formItemLayout","labelCol","xs","span","sm","wrapperCol","Object","assign","label","validator","onBlur","whitespace","hasFeedback","standings","i","key","es_select","standingOptions","majors","mode","majorOptions","valuePropName","getValueFromEvent","compiled_default","withIcon","withLabel","buttonText","onChange","onDrop","imgExtension","maxFileSize","withPreview","offset","WrappedRegistrationForm","Content-Type","Sider","NavbarFeed","pageNum","overflow","height","position","left","menu","theme","defaultSelectedKeys","onClick","handleClick","Link","fetchPosts","Authorization","feeds","postStart","postComplete","editPostStart","editPostComplete","deletePostStart","deletePostComplete","FeedCard","card","title","extra","toFormattedDateString","date","description","dateString","Date","MM","getMonth","dd","getDate","yyyy","getFullYear","hh","getHours","mm","getMinutes","ss","getSeconds","FeedList","sort","feed1","feed2","modifyTime","feedItems","map","feed","id","FeedCard_FeedCard","TextArea","Input","PostFeed","console","log","newPost","autosize","minRows","maxRows","PostForm","isLoading","post","Feed","Feed_PostFeed","Feed_FeedList","Header","FeedWithLayout","zIndex","width","FeedWithLayout_Sider","marginTop","Navbar","FeedWithLayout_Content","components_Feed_Feed","PeopleCard","PeopleList","fetchUsers","peopleItems","users","PeopleCard_PeopleCard","firstName","lastname","standing","people","People","People_PeopleList","PeopleWithLayout","PeopleWithLayout_Header","PeopleWithLayout_Sider","PeopleWithLayout_Content","components_People_People","EditPost","editPost","postId","closeModal","_this2","filter","initialValue","EditPost_TextArea","EditPostForm","confirm","Modal","UserFeedCard","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","editPostOnClick","editPostModalVisible","handlePostCancel","showDeleteConfirm","modifyState","deletePost","okText","okType","cancelText","onOk","onCancel","bind","assertThisInitialized","float","margin","marginBottom","marginRight","modal","visible","footer","Profile_EditPost","UserFeedList","modifiedState","undefined","peopleId","Profile_UserFeedCard","fetchJobs","jobs","jobStart","jobComplete","editJobStart","editJobComplete","deleteJobStart","EditJob","editJob","jobId","job","location","EditJob_TextArea","EditJob_Option","EditJobForm","UserJobCard","editJobOnClick","editJobModalVisible","handleJobCancel","deleteJob","Profile_EditJob","UserJobList","job1","job2","jobItems","Profile_UserJobCard","UserInfo","avatar","size","src","firstname","majorView","forEach","elem","index","email","RadioButton","Radio","Button","RadioGroup","Group","Profile","radioOnChange","jobsView","renderProfile","UserInfo_UserInfo","defaultValue","displayJobs","displayPosts","Profile_UserJobList","Profile_UserFeedList","ProfileWithLayout","ProfileWithLayout_Header","ProfileWithLayout_Sider","ProfileWithLayout_Content","components_Profile_Profile","JobCard","major","JobList","JobCard_JobCard","PostJob","newJob","PostJob_TextArea","PostJob_Option","JobForm","Job","Job_PostJob","Job_JobList","JobWithLayout","JobWithLayout_Header","JobWithLayout_Sider","JobWithLayout_Content","components_Job_Job","initialState","combineReducers","arguments","action","objectSpread","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","BrowserRouter","Switch","Route","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.8a1c50dc.chunk.js","sourcesContent":["export const API_BASE = 'https://researchtreeapis.azurewebsites.net/api'\n// export const API_BASE = 'https://researchtreeapi2.azurewebsites.net/api'","import { LOG_IN, SIGN_UP, ACCOUNT_ERROR, CLEAR_ACCOUNT_ERROR } from './types';\nimport { API_BASE } from './ApiConstant';\n\nexport const login = (userCredential) => dispatch => {\n    fetch(`${API_BASE}/Account/login`, {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'content-type': 'application/json; charset=utf-8'\n        },\n        body: JSON.stringify(userCredential)\n    })\n    .then(res => res.json())\n    .then(user => dispatch({\n        type:LOG_IN,\n        payload: user\n    }))\n    .catch(error => dispatch({\n        type: ACCOUNT_ERROR,\n        payload: \"Email or Password is not matched\"\n    }));\n};\n\nexport const signup = (user) => dispatch => {\n    fetch(`${API_BASE}/Account`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json; charset=utf-8'\n        },\n        body: JSON.stringify(user)\n    })\n    .then(res => res.json())\n    .then(user => dispatch({\n        type:SIGN_UP,\n        payload: user\n    }))\n    .catch(error => dispatch({\n        type: ACCOUNT_ERROR,\n        payload: \"Sign_up error\"\n    }));\n};\n\nexport const clearError = () => dispatch => {\n    dispatch({\n        type: CLEAR_ACCOUNT_ERROR,\n        payload: null\n    });\n}","//Account\nexport const ACCOUNT_ERROR = 'ACCOUNT_ERROR';\nexport const CLEAR_ACCOUNT_ERROR = 'CLEAR_ACCOUNT_ERROR';\nexport const LOG_IN = 'LOG_IN';\nexport const SIGN_UP = 'SIGN_UP';\n\n//Feed\nexport const FETCH_POSTS = 'FETCH_POSTS';\nexport const NEW_POST = 'NEW_POSTS';\nexport const POST_ERROR = 'POST_ERROR';\nexport const CLEAR_POST_ERROR = 'CLEAR_POST_ERROR';\nexport const POST_START = 'POST_START';\nexport const POST_COMPLETE = 'POST_COMPLETE';\nexport const EDIT_POST = 'EDIT_POST';\nexport const EDIT_POST_START = 'EDIT_POST_START';\nexport const EDIT_POST_ERROR = 'EDIT_POST_ERROR';\nexport const CLEAR_EDIT_POST_ERROR = 'CLEAR_EDIT_POST_ERROR';\nexport const EDIT_POST_COMPLETE = 'EDIT_POST_COMPLETE';\nexport const DELETE_POST = 'DELETE_POST';\nexport const DELETE_POST_START = 'DELETE_POST_START';\nexport const DELETE_POST_ERROR = 'DELETE_POST_ERROR';\nexport const CLEAR_DELETE_POST_ERROR = 'CLEAR_DELETE_POST_ERROR';\nexport const DELETE_POST_COMPLETE = 'DELETE_POST_COMPLETE';\n\n//User\nexport const FETCH_USERS = 'FETCH_USERS';\nexport const PEOPLE_ERROR = 'PEOPLE_ERROR';\nexport const CLEAR_PEOPLE_ERROR = 'CLEAR_PEOPLE_ERROR';\n\n//Job\nexport const FETCH_JOBS = 'FETCH_JOBS';\nexport const NEW_JOB = 'NEW_JOBS';\nexport const JOB_ERROR = 'JOB_ERROR';\nexport const CLEAR_JOB_ERROR = 'CLEAR_JOB_ERROR';\nexport const JOB_START = 'JOB_START';\nexport const JOB_COMPLETE = 'JOB_COMPLETE';\nexport const EDIT_JOB = 'EDIT_JOB';\nexport const EDIT_JOB_START = 'EDIT_JOB_START';\nexport const EDIT_JOB_ERROR = 'EDIT_JOB_ERROR';\nexport const CLEAR_EDIT_JOB_ERROR = 'CLEAR_EDIT_JOB_ERROR';\nexport const EDIT_JOB_COMPLETE = 'EDIT_JOB_COMPLETE';\nexport const DELETE_JOB = 'DELETE_JOB';\nexport const DELETE_JOB_START = 'DELETE_JOB_START';\nexport const DELETE_JOB_ERROR = 'DELETE_JOB_ERROR';\nexport const CLEAR_DELETE_JOB_ERROR = 'CLEAR_DELETE_JOB_ERROR';\nexport const DELETE_JOB_COMPLETE = 'DELETE_JOB_COMPLETE';\n","import React, { Component } from 'react'\nimport {Redirect} from 'react-router-dom';\nimport { Layout, Form, Icon, Input, Button, Alert } from 'antd'\nimport '../../style/Account/login.css'\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { login, clearError } from '../../actions/AccountAction';\n\nconst { Content } = Layout;\n\nclass Login extends Component {\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        this.props.clearError();\n        this.props.login(values);\n      }\n    });\n  }\n\n  render() {\n    if (this.props.error == null && this.props.user.token != null) {\n      return <Redirect to='/Feed'></Redirect>\n    }\n    const { getFieldDecorator } = this.props.form;\n\n    let error;\n    if (this.props.error != null) {\n      error = <Alert message={this.props.error} type=\"error\" />\n    }\n\n    return (\n      <Layout className=\"layout\" style={{background: '#fff'}}>\n        <Content style={{ padding: '0 25%' }}>\n          <div className=\"login-container\" style={{ padding: 24, background: '#fff', textAlign: 'center' }}>\n            <h1 style={{color: '#c1e791'}}>ResearchTree</h1>\n            <Form onSubmit={this.handleSubmit} className=\"login-form\">\n              <Form.Item>\n                {getFieldDecorator('Email', {\n                  rules: [{ required: true, message: 'Please input your email!' }],\n                })(\n                  <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Email\" />\n                )}\n              </Form.Item>\n              <Form.Item>\n                {getFieldDecorator('Password', {\n                  rules: [{ required: true, message: 'Please input your Password!' }],\n                })(\n                  <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Password\" />\n                )}\n              </Form.Item>\n              <Form.Item>          \n                <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                  Log in\n                </Button>\n                <br/>\n                Or <a href=\"/Signup\">Sign Up now!</a>\n              </Form.Item>\n            </Form>\n            {error}\n          </div>\n        </Content>\n      </Layout>\n    );\n  }\n}\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user.user,\n  error: state.user.error\n})\n\nconst LoginForm = Form.create({ name: 'normal_login' })(Login);\n\nexport default connect(mapStateToProps, { login, clearError })(LoginForm);","export const Majors = [\n    \"Computer Engineering\",\n    \"Computer Science\",\n    \"Electrical Engineering\",\n    \"Information Technology\"\n];","export const Standings = [\n    \"Undergraduate\",\n    \"Graduate\",\n    \"Professor\"\n];","import React, { Component } from 'react'\nimport {\n  Form,\n  Input,\n  Button,\n  Select,\n} from 'antd';\nimport ImageUploader from 'react-images-upload';\n\nimport {Majors} from '../../declaration/major';\nimport {Standings} from '../../declaration/standing';\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { signup, clearError } from '../../actions/AccountAction';\n\nconst { Option } = Select;\n\nclass Signup extends Component {\n  state = {\n    confirmDirty: false,\n    image: null\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        values[\"Role\"] = values && values.Standing !== 2 ? 0 : 1;\n        delete values[\"confirm\"];\n\n        if (values[\"image\"]) {\n          new Promise((resolve, reject) => {\n            var reader = new FileReader();\n            reader.addEventListener(\"load\", () => {\n                var data = reader.result;\n                var res = data.split(\",\");\n                var imageData = res[1];\n                resolve(imageData);\n            });\n            reader.readAsDataURL(values[\"image\"]);\n          }).then(imageData => {\n            values[\"image\"] = imageData;\n            this.props.clearError();\n            this.props.signup(values);\n          });\n        } else {\n          this.props.clearError();\n          this.props.signup(values);\n        }\n      }\n    });\n  }\n\n  handleConfirmBlur = (e) => {\n    const value = e.target.value;\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  }\n\n  compareToFirstPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && value !== form.getFieldValue('Password')) {\n      callback('Two passwords that you enter is inconsistent!');\n    } else {\n      callback();\n    }\n  }\n\n  validateToNextPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    const pattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{6,}$/\n    if (!pattern.test(value)) {\n      callback('Password must be more than 6 characters, with at least one capital, numeric or special character')\n      return;\n    }\n    if (value && this.state.confirmDirty) {\n      form.validateFields(['confirm'], { force: true });\n    }\n    callback();\n  }\n\n  validateLocationZipCode = (rule, value, callback) => {\n    const pattern = /^(\\d{5})?$/\n    if (!pattern.test(value)) {\n      callback('Not a valid ZipCode, must be 5 digits')\n    } else {\n      callback()\n    }\n  }\n\n  validateMajorsMaxLimit = (rule, value, callback) => {\n    if (value.length > 3) {\n      callback('Max 3 Majors')\n    } else {\n      callback()\n    }\n  }\n\n  normFile = (e) => {\n    if (Array.isArray(e) && e.length > 0) {\n      return e[0];\n    }\n    return null;\n  }\n\n  render() {\n    if (this.props.error == null && this.props.user.token != null) {\n      this.props.history.push('/Feed');\n    }\n\n    const { getFieldDecorator } = this.props.form;\n\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0,\n        },\n        sm: {\n          span: 16,\n          offset: 8,\n        },\n      },\n    };\n\n    return (\n      <div>\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Item\n            {...formItemLayout}\n            label=\"Email\"\n          >\n            {getFieldDecorator('Email', {\n              rules: [{\n                type: 'email', message: 'The input is not valid E-mail!',\n              }, {\n                required: true, message: 'Please input your E-mail!',\n              }],\n            })(\n              <Input />\n            )}\n          </Form.Item>\n          <Form.Item\n            {...formItemLayout}\n            label=\"Password\"\n          >\n            {getFieldDecorator('Password', {\n              rules: [{\n                required: true, message: 'Please input your password!',\n              }, {\n                validator: this.validateToNextPassword,\n              }],\n            })(\n              <Input type=\"password\" />\n            )}\n          </Form.Item>\n          <Form.Item\n            {...formItemLayout}\n            label=\"Confirm Password\"\n          >\n            {getFieldDecorator('confirm', {\n              rules: [{\n                required: true, message: 'Please confirm your password!',\n              }, {\n                validator: this.compareToFirstPassword,\n              }],\n            })(\n              <Input type=\"password\" onBlur={this.handleConfirmBlur} />\n            )}\n          </Form.Item>\n          <Form.Item\n            {...formItemLayout}\n            label=\"FirstName\"\n          >\n            {getFieldDecorator('FirstName', {\n              rules: [{ required: true, message: 'Please input your firstname!', whitespace: true }],\n            })(\n              <Input />\n            )}\n          </Form.Item>\n          <Form.Item\n            {...formItemLayout}\n            label=\"LastName\"\n          >\n            {getFieldDecorator('LastName', {\n              rules: [{ required: true, message: 'Please input your lastname!', whitespace: true }],\n            })(\n              <Input />\n            )}\n          </Form.Item>\n          <Form.Item\n            {...formItemLayout}\n            label=\"Standing\"\n            hasFeedback\n          >\n            {getFieldDecorator('Standing', {\n              rules: [\n                { required: true, message: 'Please select your standing!' },\n              ],\n            })(\n              standingOptions()\n            )}\n          </Form.Item>\n          <Form.Item\n            {...formItemLayout}\n            label=\"Majors\"\n          >\n            {getFieldDecorator('Majors', {\n              rules: [\n                { required: true, message: 'Please select your majors!', type: 'array' },\n                { validator: this.validateMajorsMaxLimit }\n              ],\n            })(\n              majorOptions()\n            )}\n          </Form.Item>\n          <Form.Item\n            {...formItemLayout}\n            label=\"Location\"\n          >\n            {getFieldDecorator('Location', {\n              rules: [\n                { required: true, message: 'Please input your location!', whitespace: true },\n                { validator: this.validateLocationZipCode }\n              ],\n            })(\n              <Input placeholder=\"ZipCode\"/>\n            )}\n          </Form.Item>\n          <Form.Item\n            {...formItemLayout}\n            label=\"Profile\"\n          >\n            {getFieldDecorator('image', {\n              valuePropName: 'fileList',\n              getValueFromEvent: this.normFile,\n            })(\n              <ImageUploader\n                withIcon={true}\n                withLabel={true}\n                label='JPG|Size<1MB'\n                buttonText='Upload Profile'\n                onChange={this.onDrop}\n                imgExtension={['.jpg']}\n                maxFileSize={1048576}\n                withPreview={true}\n            />\n            )}\n          </Form.Item>\n          <Form.Item {...tailFormItemLayout}>\n            <Button type=\"primary\" htmlType=\"submit\">Sign Up</Button>\n          </Form.Item>\n        </Form>\n      </div>\n      \n    );\n  }\n}\n\nfunction majorOptions() {\n  var majors = [];\n  for (var i = 0; i < Majors.length; i++) {\n    majors.push(<Option key={i} value={i}>{Majors[i]}</Option>)\n  }\n  return (\n    <Select mode=\"multiple\" placeholder=\"Please select majors\">\n      {majors}\n    </Select>\n  );\n}\n\nfunction standingOptions() {\n  var standings = [];\n  for (var i = 0; i < Standings.length; i++) {\n    standings.push(<Option key={i} value={i}>{Standings[i]}</Option>)\n  }\n  return (\n    <Select placeholder=\"Please select your standing\">\n      {standings}\n    </Select>\n  );\n}\n\nSignup.propTypes = {\n  signup: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user.user,\n  error: state.user.error\n})\n\nconst WrappedRegistrationForm = Form.create({ name: 'register' })(Signup);\n\nexport default connect(mapStateToProps, { signup, clearError })(WrappedRegistrationForm);\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\n\n// import {connect} from 'react-redux'\n\n//antd\nimport { Layout, Menu, Icon } from 'antd';\n\n//c1e791 green\n\n\nconst { Sider, } = Layout;\n\nclass NavbarFeed extends Component {\n\n  render() {\n    const {pageNum} = this.props;\n\n    return (\n      <Layout>\n        <Sider style={{\n          overflow: 'auto', height: '100%', position: 'fixed', left: 0,\n          background: '#74997a'\n        }}\n        >\n          <div className=\"logo\" />\n\n          <Menu theme=\"\" mode=\"inline\" defaultSelectedKeys={pageNum} style={{ background: '#74997a', color: 'white' }} onClick={this.handleClick}>\n            <Menu.Item key=\"1\">\n              <Link to={'/Feed'}>\n                <Icon type=\"user\" />\n                <span className=\"nav-text\">Feed</span>\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"2\">\n              <Link to={'/People'}>\n                <Icon type=\"team\" />\n                <span className=\"nav-text\">People</span>\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"3\">\n              <Link to={'/Job'}>\n                <Icon type=\"shop\" />\n                <span className=\"nav-text\">Job</span>\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"4\">\n              <Link to={'/Profile'}>\n                <Icon type=\"bar-chart\" />\n                <span className=\"nav-text\">Profile</span>\n              </Link>\n            </Menu.Item>\n          </Menu>\n        </Sider>\n      </Layout>\n    );\n  }\n}\n\n\n\nexport default (NavbarFeed);\n","import { FETCH_POSTS, NEW_POST, POST_ERROR, CLEAR_POST_ERROR, POST_START, POST_COMPLETE, EDIT_POST, EDIT_POST_ERROR, EDIT_POST_START, EDIT_POST_COMPLETE, CLEAR_EDIT_POST_ERROR, DELETE_POST, DELETE_POST_START, DELETE_POST_ERROR, CLEAR_DELETE_POST_ERROR, DELETE_POST_COMPLETE } from './types';\nimport { API_BASE } from './ApiConstant';\n\nexport const fetchPosts = (token) => dispatch => {\n    fetch(`${API_BASE}/Feeds`, {\n        method: 'GET',\n        headers: {\n            'Accept': 'application/json',\n            'content-type': 'application/json; charset=utf-8',\n            'Authorization': `Bearer ${token}`\n        }\n    })\n    .then(res => res.json())\n    .then(feeds => dispatch({\n        type:FETCH_POSTS,\n        payload: feeds\n    }))\n    .catch(error => dispatch({\n        type: POST_ERROR,\n        payload: \"Error in fetching feeds\"\n    }));\n};\n\nexport const newPost = (token, post) => dispatch => {\n    postStart()\n    fetch(`${API_BASE}/Feeds`, {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'content-type': 'application/json; charset=utf-8',\n            'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify(post)\n    })\n    .then(res => res.json())\n    .then(newPost => dispatch({\n        type: NEW_POST,\n        payload: newPost\n    }))\n    .then(postComplete)\n    .catch(error => dispatch({\n        type: POST_ERROR,\n        payload: \"Error in posting new feed\"\n    }));\n};\n\nexport const editPost = (token, id, post) => dispatch => {\n    editPostStart()\n    fetch(`${API_BASE}/Feeds/${id}` , {\n        method: 'PUT',\n        headers: {\n            'Accept': 'application/json',\n            'content-type': 'application/json; charset=utf-8',\n            'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify(post)\n    })\n    .then(res => res.json())\n    .then(editPost => dispatch({\n        type: EDIT_POST,\n        payload: editPost\n    }))\n    .then(editPostComplete)\n    .catch(error => dispatch({\n        type: EDIT_POST_ERROR,\n        payload: \"Error in editing feed\"\n    }));\n}\n\nexport const deletePost = (token, id) => dispatch => {\n    deletePostStart()\n    console.log(`${API_BASE}/Feeds/${id}`);\n    fetch(`${API_BASE}/Feeds/${id}` , {\n        method: 'DELETE',\n        headers: {\n            'Accept': 'application/json',\n            'content-type': 'application/json; charset=utf-8',\n            'Authorization': `Bearer ${token}`\n        },\n    })\n    .then(res => res.json())\n    .then(deletePost => dispatch({\n        type: DELETE_POST,\n        payload: deletePost\n    }))\n    .then(deletePostComplete)\n    .catch(error => dispatch({\n        type: DELETE_POST_ERROR,\n        payload: \"Error in deleting feed\"\n    }));\n}\n\nexport const clearError = () => dispatch => {\n    dispatch({\n        type: CLEAR_POST_ERROR,\n        payload: null\n    });\n}\n\nexport const postStart = () => dispatch => {\n    dispatch({\n        type: POST_START,\n        payload: true\n    });\n}\n\nexport const postComplete = () => dispatch => {\n    dispatch({\n        type: POST_COMPLETE,\n        payload: false\n    });\n}\n\nexport const editClearError = () => dispatch => {\n    dispatch({\n        type: CLEAR_EDIT_POST_ERROR,\n        payload: null\n    });\n}\n\nexport const editPostStart = () => dispatch => {\n    dispatch({\n        type: EDIT_POST_START,\n        payload: true\n    });\n}\n\nexport const editPostComplete = () => dispatch => {\n    dispatch({\n        type: EDIT_POST_COMPLETE,\n        payload: false\n    });\n}\n\nexport const deleteClearError = () => dispatch => {\n    dispatch({\n        type: CLEAR_DELETE_POST_ERROR,\n        payload: null\n    });\n}\n\nexport const deletePostStart = () => dispatch => {\n    dispatch({\n        type: DELETE_POST_START,\n        payload: true\n    });\n}\n\nexport const deletePostComplete = () => dispatch => {\n    dispatch({\n        type: DELETE_POST_COMPLETE,\n        payload: false\n    });\n}\n\n\n","import React, { Component } from 'react'\n\nimport { Card } from 'antd';\n\n\nexport default class FeedCard extends Component {\n\n    render() {\n        return (\n        <div>\n            <Card\n                title={this.props.title}\n                extra={toFormattedDateString(this.props.date)}\n            >\n                {this.props.description}\n            </Card>\n        </div>\n        )\n    }\n}\n\nfunction toFormattedDateString(dateString) {\n    const date = new Date(dateString)\n    var MM = date.getMonth() + 1\n    var dd = date.getDate()\n    var yyyy = date.getFullYear()\n    var hh = date.getHours()\n    var mm = date.getMinutes()\n    var ss = date.getSeconds()\n\n    return `${MM}/${dd}/${yyyy} ${hh}:${mm}:${ss}`\n}\n","import React, { Component } from 'react'\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport {fetchPosts} from '../../actions/FeedAction'\nimport FeedCard from './FeedCard';\n\nclass FeedList extends Component {\n    componentWillMount() {\n        this.props.fetchPosts(this.props.token);\n    }\n\n    render() {\n        this.props.feeds.sort(function(feed1,feed2){\n            return new Date(feed2.modifyTime) - new Date(feed1.modifyTime);\n        });\n        \n        const feedItems = this.props.feeds.map(feed => (\n            <div key={feed.id}>\n                <FeedCard title={feed.title} description={feed.description} date={feed.modifyTime}/>\n            </div>\n        ));\n        return (\n        <div>\n            <h1>Feeds</h1>\n            {feedItems}\n        </div>\n        )\n    }\n}\n\nFeedList.propTypes = {\n    fetchPosts: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n    token: state.user.user.token,\n    feeds: state.feed.feeds,\n    error: state.feed.error\n  })\n\nexport default connect(mapStateToProps, { fetchPosts })(FeedList);","import React, { Component } from 'react'\n\nimport {\n    Form, Icon, Input, Button,\n} from 'antd';\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport {newPost, fetchPosts} from '../../actions/FeedAction'\n\nimport '../../style/Feed/postFeed.css';\n\nconst { TextArea } = Input;\n\nclass PostFeed extends Component {\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n                values[\"PeopleId\"] = `${this.props.user.id}`;\n                this.props.newPost(this.props.user.token, values);\n            }\n        });\n    }\n    \n    render() {\n        // if (!this.props.isLoading) {\n        //     this.props.fetchPosts(this.props.user.token)\n        // } \n        const { getFieldDecorator } = this.props.form;\n        return (\n          <Form onSubmit={this.handleSubmit} className=\"post-feed\">\n            <Form.Item>\n              {getFieldDecorator('Title', {\n                rules: [{ required: true, message: 'Please input a title!' }],\n              })(\n                <Input prefix={<Icon type=\"team\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Title\" />\n              )}\n            </Form.Item>\n            <Form.Item>\n              {getFieldDecorator('Description', {\n                rules: [{ required: true, message: 'Please input your Description!' }],\n              })(\n                <TextArea placeholder=\"Description\" autosize={{ minRows: 2, maxRows: 6 }} />\n                )}\n            </Form.Item>\n            <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                Post\n              </Button>\n            </Form.Item>\n          </Form>\n        );\n    }\n}\n\nPostFeed.propTypes = {\n    newPost: PropTypes.func.isRequired,\n    fetchPosts: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n    user: state.user.user,\n    feeds: state.feed.feeds,\n    isLoading: state.feed.isLoading,\n    error: state.feed.error\n})\n    \nconst PostForm = Form.create({ name: 'post_form' })(PostFeed);\n\nexport default connect(mapStateToProps, { fetchPosts, newPost })(PostForm);","import React, { Component } from 'react'\n\nimport FeedList from './FeedList'\nimport PostFeed from './PostFeed';\n\nclass Feed extends Component {\n    render() {\n        return (\n            <div>\n                <PostFeed />\n                <FeedList />\n            </div>\n        )\n    }\n}\n\nexport default Feed;","import React, { Component } from 'react'\nimport {Redirect} from 'react-router-dom'\nimport {connect} from 'react-redux'\n\nimport { Layout } from 'antd';\n\nimport Navbar from '../Navbar';\nimport Feed from './Feed';\n\nconst {\n    Content, Sider, Header,\n  } = Layout;\n\nclass FeedWithLayout extends Component {\n    render() {\n        return (\n            <div>\n                {\n                    this.props.user.token ? \n                    renderFeed(): \n                    <Redirect to='/Login' />\n                }\n            </div>\n        )\n    }\n}\n\nfunction renderFeed() {\n    return(\n        //try layout\n        <div>\n            <Layout>\n            <Header style={{background:'#c1e791', position: 'fixed', zIndex: 1, width: '100%' }}><h1 style={{color:'white'}}>ResearchTree</h1></Header>\n                <Layout>\n                    <Sider style={{marginTop: '5%'}}>\n                        <Navbar pageNum={['1']} />\n                    </Sider>\n                    <Content style={{marginTop: '6%'}}>\n                        <Feed />\n                    </Content>\n                </Layout>\n            </Layout>\n        </div>\n    );\n}\n\nconst mapStateToProps = state => ({\n    user: state.user.user\n})\n\nexport default connect(mapStateToProps, {})(FeedWithLayout);","import React, { Component } from 'react'\n\nimport { Card } from 'antd';\n\n\nexport default class PeopleCard extends Component {\n\n    render() {\n        return (\n        <div>\n            <Card\n                title={this.props.title}\n                extra={this.props.date}\n            >\n                {this.props.description}\n            </Card>\n        </div>\n        )\n    }\n}","import React, { Component } from 'react'\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport {fetchUsers} from '../../actions/PeopleAction'\nimport PeopleCard from './PeopleCard';\n\nclass PeopleList extends Component {\n    componentWillMount() {\n        this.props.fetchUsers(this.props.token);\n    }\n\n    render() {\n        \n        const peopleItems = this.props.users.map(user => (\n            <div key={user.id}>\n            \n                <PeopleCard title={user.firstName} description={user.lastname} date={user.standing}/>\n            </div>\n        ));\n        return (\n        <div>\n            <h1>People</h1>\n            {peopleItems}\n        </div>\n        )\n    }\n}\n\nPeopleList.propTypes = {\n    fetchUsers: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n    token: state.user.user.token,\n    users: state.people.users,\n    error: state.people.error\n  })\n\nexport default connect(mapStateToProps, { fetchUsers })(PeopleList);","import { FETCH_USERS, PEOPLE_ERROR, CLEAR_PEOPLE_ERROR } from './types';\nimport { API_BASE } from './ApiConstant';\n\nexport const fetchUsers = (token) => dispatch => {\n    fetch(`${API_BASE}/Users`, {\n        method: 'GET',\n        headers: {\n            'Accept': 'application/json',\n            'content-type': 'application/json; charset=utf-8',\n            'Authorization': `Bearer ${token}`\n        }\n    })\n    .then(res => res.json())\n    .then(users => dispatch({\n        type:FETCH_USERS,\n        payload: users\n    }))\n    .catch(error => dispatch({\n        type: PEOPLE_ERROR,\n        payload: \"Error in fetching users\"\n    }));\n};\n\n\n\nexport const clearError = () => dispatch => {\n    dispatch({\n        type: CLEAR_PEOPLE_ERROR,\n        payload: null\n    });\n}\n\n\n\n","import React, { Component } from 'react'\nimport PeopleList from './PeopleList'\n\nclass People extends Component {\n    render() {\n        return (\n            <div>\n                <PeopleList />\n            </div>\n        )\n    }\n}\n\nexport default People;","import React, { Component } from 'react'\nimport {Redirect} from 'react-router-dom'\nimport {connect} from 'react-redux'\n\nimport { Layout } from 'antd';\n\nimport People from './People'\n\nimport Navbar from '../Navbar';\n\nconst {\n    Content, Sider, Header,\n  } = Layout;\n\nclass PeopleWithLayout extends Component {\n    render() {\n        return (\n            <div>\n                {\n                    this.props.user.token ? \n                    renderPeople(): \n                    <Redirect to='/Login' />\n                }\n            </div>\n        )\n    }\n}\n\nfunction renderPeople() {\n    return(\n        //try layout\n        <div>\n            <Layout>\n            <Header style={{background:'#c1e791', position: 'fixed', zIndex: 1, width: '100%' }}><h1 style={{color:'white'}}>ResearchTree</h1></Header>\n                <Layout>\n                    <Sider style={{marginTop: '5%'}}>\n                        <Navbar pageNum={['2']} />\n                    </Sider>\n                    <Content style={{marginTop: '6%'}}>\n                        <People />\n                    </Content>\n                </Layout>\n            </Layout>\n        </div>\n    );\n}\n\nconst mapStateToProps = state => ({\n    user: state.user.user\n})\n\nexport default connect(mapStateToProps, {})(PeopleWithLayout);","import React, { Component } from 'react'\n\nimport {\n    Form, Input, Button,\n} from 'antd';\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport {editPost, fetchPosts} from '../../actions/FeedAction';\n\n// change this\nimport '../../style/Feed/postFeed.css';\n\nconst { TextArea } = Input;\n\nclass EditPost extends Component {\n\n    componentWillMount() {\n      this.props.fetchPosts(this.props.user.token);\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                values[\"PeopleId\"] = `${this.props.user.id}`;\n                this.props.editPost(this.props.user.token, this.props.postId, values);\n                this.props.closeModal();\n            }\n        });\n    }\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        const post = this.props.feeds.filter( post => post.id === this.props.postId);\n        const description = post[0].description;\n        const title = post[0].title;\n\n        console.log(post);\n        return (\n          <Form onSubmit={this.handleSubmit} className=\"post-feed\">\n            <Form.Item\n            label=\"Title\"\n            >\n              {getFieldDecorator('Title', {\n                rules: [{ required: true, message: 'Please the title of your post!' }],\n                initialValue: title\n              })(\n                <Input placeholder=\"Title\"  />\n              )}\n            </Form.Item>\n            <Form.Item\n              label=\"Description\"\n            >\n              {getFieldDecorator('Description', {\n                rules: [{ required: true, message: 'Please input your Description!' }],\n                initialValue: description\n              })(\n                <TextArea placeholder=\"\" autosize={{ minRows: 2, maxRows: 6 }}  />\n                )}\n            </Form.Item>\n            <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                Submit\n              </Button>\n            </Form.Item>\n          </Form>\n        );\n    }\n}\n\nEditPost.propTypes = {\n    editPost: PropTypes.func.isRequired,\n    fetchPosts: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    user: state.user.user,\n    error: state.feed.error,\n    feeds: state.feed.feeds\n})\n    \nconst EditPostForm = Form.create({ name: 'editpost_form' })(EditPost);\n\nexport default connect(mapStateToProps, { editPost, fetchPosts })(EditPostForm);","import React, { Component } from 'react'\n\nimport { Card, Button, Modal } from 'antd';\nimport EditPost from './EditPost';\nimport {deletePost} from '../../actions/FeedAction';\nimport { connect } from 'react-redux';\n\nconst confirm = Modal.confirm;\n\nclass UserFeedCard extends Component {\n\n    constructor(){\n        super();\n        this.state = {editPostModalVisible: false};\n\n        this.closeModal = this.closeModal.bind(this);\n    }\n    \n    render() {\n        const style = {\n            float: 'right',\n            margin: \"0 5px\"\n        };\n\n        return (\n        <div>\n            <Card\n                title={this.props.title}\n                extra={toFormattedDateString(this.props.date)}\n                style={{marginBottom: \"5px\", marginRight: \"10px\"}}\n            >\n                {this.props.description}\n                <Button style={style} onClick={this.showDeleteConfirm} icon=\"delete\"/>\n                <Button style={style} onClick={this.editPostOnClick} icon=\"form\"/>\n                    <Modal\n                        title=\"Edit Post\"\n                        visible={this.state.editPostModalVisible}\n                        onCancel={this.handlePostCancel}\n                        footer={[\n                            null,\n                          ]}\n                        > \n                        <EditPost postId={this.props.postId} closeModal={this.closeModal}/>\n                    </Modal>\n                \n            </Card>\n        </div>\n        )\n    }\n\n    editPostOnClick = (e) => {\n        this.setState({editPostModalVisible: true});\n    }\n\n    handlePostCancel = (e) => {\n        this.setState({editPostModalVisible: false});\n    }\n\n    closeModal(){\n        this.setState({editPostModalVisible: false});\n        this.props.modifyState();\n    }\n\n    showDeleteConfirm = () => {\n        var token = this.props.token;\n        var postId = this.props.postId;\n        var closeModal = this.props.modifyState;\n        var deletePost = this.props.deletePost;\n        confirm({\n          title: 'Are you sure delete this post?',\n          okText: 'Yes',\n          okType: 'danger',\n          cancelText: 'No',\n          onOk() {\n            deletePost(token, postId);\n            closeModal();\n            console.log('Ok');\n          },\n          onCancel() {\n            console.log('Cancel');\n          },\n        });\n      }\n}\n\nfunction toFormattedDateString(dateString) {\n    const date = new Date(dateString)\n    var MM = date.getMonth() + 1\n    var dd = date.getDate()\n    var yyyy = date.getFullYear()\n    var hh = date.getHours()\n    var mm = date.getMinutes()\n    var ss = date.getSeconds()\n\n    return `${MM}/${dd}/${yyyy} ${hh}:${mm}:${ss}`\n}\n\nconst mapStateToProps = state => ({\n   \n  })\n\nexport default connect(mapStateToProps, { deletePost })(UserFeedCard);\n","import React, { Component } from 'react'\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport {fetchPosts} from '../../actions/FeedAction'\nimport UserFeedCard from './UserFeedCard';\n\nclass UserFeedList extends Component {\n    constructor(){\n        super();\n        this.state = {modifiedState: false};\n\n        this.modifyState = this.modifyState.bind(this);\n    }\n\n    componentWillMount() {\n        this.props.fetchPosts(this.props.token);\n    }\n\n    render() {\n        if( this.props.feeds !== undefined){\n\n            this.props.feeds.sort(function(feed1,feed2){\n                return new Date(feed2.modifyTime) - new Date(feed1.modifyTime);\n            });\n\n            let feeds = this.props.feeds.filter( feed => feed.peopleId === this.props.id);\n            \n            const feedItems = feeds.map(feed => (\n                <div key={feed.id}>\n                    <UserFeedCard token={this.props.token} postId={feed.id} title={feed.title} description={feed.description} date={feed.modifyTime} modifyState={this.modifyState}/>\n                </div>\n            ));\n            return (\n                <div>\n                    {feedItems}\n                </div>\n                );\n        }\n        return (<div></div>);\n    }\n\n    modifyState(){\n        this.setState({modifiedState: !this.state.modifiedState}); \n        this.props.fetchPosts(this.props.token);\n    }\n}\n\nUserFeedList.propTypes = {\n    fetchPosts: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n    token: state.user.user.token,\n    id: state.user.user.id,\n    feeds: state.feed.feeds,\n    error: state.feed.error\n  })\n\nexport default connect(mapStateToProps, { fetchPosts })(UserFeedList);","import { FETCH_JOBS, NEW_JOB, JOB_ERROR, CLEAR_JOB_ERROR, JOB_START, JOB_COMPLETE, EDIT_JOB, CLEAR_EDIT_JOB_ERROR, EDIT_JOB_START, EDIT_JOB_ERROR, EDIT_JOB_COMPLETE, DELETE_JOB, DELETE_JOB_START, DELETE_JOB_ERROR, CLEAR_DELETE_JOB_ERROR, DELETE_JOB_COMPLETE } from './types';\nimport { API_BASE } from './ApiConstant';\n\nexport const fetchJobs = (token) => dispatch => {\n    fetch(`${API_BASE}/Jobs`, {\n        method: 'GET',\n        headers: {\n            'Accept': 'application/json',\n            'content-type': 'application/json; charset=utf-8',\n            'Authorization': `Bearer ${token}`\n        }\n    })\n    .then(res => res.json())\n    .then(jobs => dispatch({\n        type:FETCH_JOBS,\n        payload: jobs\n    }))\n    .catch(error => dispatch({\n        type: JOB_ERROR,\n        payload: \"Error in fetching jobs\"\n    }));\n};\n\nexport const newJob = (token, job) => dispatch => {\n    jobStart()\n    fetch(`${API_BASE}/Jobs`, {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'content-type': 'application/json; charset=utf-8',\n            'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify(job)\n    })\n    .then(res => res.json())\n    .then(newJob => dispatch({\n        type: NEW_JOB,\n        payload: newJob\n    }))\n    .then(jobComplete)\n    .catch(error => dispatch({\n        type: JOB_ERROR,\n        payload: \"Error in posting new job\"\n    }));\n};\n\nexport const editJob = (token, id, job) => dispatch => {\n    editJobStart()\n    fetch(`${API_BASE}/Jobs/${id}`, {\n        method: 'PUT',\n        headers: {\n            'Accept': 'application/json',\n            'content-type': 'application/json; charset=utf-8',\n            'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify(job)\n    })\n    .then(res => res.json())\n    .then(editJob => dispatch({\n        type: EDIT_JOB,\n        payload: editJob\n    }))\n    .then(editJobComplete)\n    .catch(error => dispatch({\n        type: EDIT_JOB_ERROR,\n        payload: \"Error in editing job\"\n    }));\n}\n\nexport const deleteJob = (token, id) => dispatch => {\n    deleteJobStart()\n    fetch(`${API_BASE}/Jobs/${id}`, {\n        method: 'DELETE',\n        headers: {\n            'Accept': 'application/json',\n            'content-type': 'application/json; charset=utf-8',\n            'Authorization': `Bearer ${token}`\n        },\n\n    })\n    .then(res => res.json())\n    .then(deleteJob => dispatch({\n        type: DELETE_JOB,\n        payload: deleteJob\n    }))\n    .then(editJobComplete)\n    .catch(error => dispatch({\n        type: DELETE_JOB_ERROR,\n        payload: \"Error in deleting job\"\n    }));\n}\n\nexport const clearError = () => dispatch => {\n    dispatch({\n        type: CLEAR_JOB_ERROR,\n        payload: null\n    });\n}\n\nexport const jobStart = () => dispatch => {\n    dispatch({\n        type: JOB_START,\n        payload: true\n    });\n}\n\nexport const jobComplete = () => dispatch => {\n    dispatch({\n        type: JOB_COMPLETE,\n        payload: false\n    });\n}\n\nexport const editClearError = () => dispatch => {\n    dispatch({\n        type: CLEAR_EDIT_JOB_ERROR,\n        payload: null\n    });\n}\n\nexport const editJobStart = () => dispatch => {\n    dispatch({\n        type: EDIT_JOB_START,\n        payload: true\n    });\n}\n\nexport const editJobComplete = () => dispatch => {\n    dispatch({\n        type: EDIT_JOB_COMPLETE,\n        payload: false\n    });\n}\n\nexport const deleteClearError = () => dispatch => {\n    dispatch({\n        type: CLEAR_DELETE_JOB_ERROR,\n        payload: null\n    });\n}\n\nexport const deleteJobStart = () => dispatch => {\n    dispatch({\n        type: DELETE_JOB_START,\n        payload: true\n    });\n}\n\nexport const deleteJobComplete = () => dispatch => {\n    dispatch({\n        type: DELETE_JOB_COMPLETE,\n        payload: false\n    });\n}\n\n\n","import React, { Component } from 'react'\n\nimport {\n    Form, Icon, Input, Button, Select\n} from 'antd';\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport {editJob, fetchJobs} from '../../actions/JobAction'\n\n// change this\nimport '../../style/Feed/postFeed.css';\nimport {Majors} from '../../declaration/major';\n\nconst { TextArea } = Input;\nconst { Option } = Select;\n\nclass EditJob extends Component {\n\n    componentWillMount() {\n      this.props.fetchJobs(this.props.user.token);\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                values[\"PeopleId\"] = `${this.props.user.id}`;\n                this.props.editJob(this.props.user.token, this.props.jobId, values);\n                this.props.closeModal();\n            }\n        });\n    }\n    validateMajorsMaxLimit = (rule, value, callback) => {\n      if (value.length > 3) {\n        callback('Max 3 Majors')\n      } else {\n        callback()\n      }\n    }\n\n    validateLocationZipCode = (rule, value, callback) => {\n      const pattern = /^(\\d{5})?$/\n      if (!pattern.test(value)) {\n        callback('Not a valid ZipCode, must be 5 digits')\n      } else {\n        callback()\n      }\n    }\n    \n    render() {\n        const { getFieldDecorator } = this.props.form;\n        const job = this.props.jobs.filter( job => job.id === this.props.jobId);\n        const description = job[0].description;\n        const title = job[0].title;\n        const majors = job[0].majors;\n        const location = job[0].location;\n        return (\n          <Form onSubmit={this.handleSubmit} className=\"post-feed\">\n            <Form.Item\n            label=\"Title\"\n            >\n              {getFieldDecorator('Title', {\n                rules: [{ required: true, message: 'Please add a title!' }],\n                initialValue: title\n              })(\n                <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Title\" />\n              )}\n            </Form.Item>\n            <Form.Item\n            label=\"Description\"\n            >\n              {getFieldDecorator('Description', {\n                rules: [{ required: true, message: 'Please input your Description!' }],\n                initialValue: description\n              })(\n                <TextArea placeholder=\"Autosize height with minimum and maximum number of lines\" autosize={{ minRows: 2, maxRows: 6 }} />\n                )}\n            </Form.Item>\n            <Form.Item\n              label=\"Majors\"\n            >\n              {getFieldDecorator('Majors', {\n                rules: [\n                  { required: true, message: 'Please select your majors!', type: 'array' },\n                  { validator: this.validateMajorsMaxLimit },\n                ],\n                initialValue: majors || []\n              })(\n                majorOptions()\n              )}\n          </Form.Item>\n          <Form.Item\n              label=\"Location\"\n            >\n              {getFieldDecorator('Location', {\n                rules: [\n                  { required: true, message: 'Please input your location!', whitespace: true },\n                  { validator: this.validateLocationZipCode },\n                ],\n                initialValue: location\n              })(\n                <Input placeholder=\"ZipCode\"/>\n              )}\n          </Form.Item>\n            <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                Submit\n              </Button>\n            </Form.Item>\n          </Form>\n        );\n    }\n}\n\nfunction majorOptions() {\n  var majors = [];\n  for (var i = 0; i < Majors.length; i++) {\n    majors.push(<Option key={i} value={i}>{Majors[i]}</Option>)\n  }\n  return (\n    <Select mode=\"multiple\" placeholder=\"Please select majors\">\n      {majors}\n    </Select>\n  );\n}\n\nEditJob.propTypes = {\n    editJob: PropTypes.func.isRequired,\n    fetchJobs: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    user: state.user.user,\n    error: state.job.error,\n    jobs: state.job.jobs\n})\n    \nconst EditJobForm = Form.create({ name: 'editjob_form' })(EditJob);\n\nexport default connect(mapStateToProps, { editJob, fetchJobs })(EditJobForm);","import React, { Component } from 'react'\n\nimport { Card, Button, Modal } from 'antd';\nimport EditJob from './EditJob';\nimport {deleteJob} from '../../actions/JobAction';\nimport { connect } from 'react-redux';\n\n\nconst confirm = Modal.confirm;\n\nclass UserJobCard extends Component {\n\n    constructor(){\n        super();\n        this.state = {editJobModalVisible: false};\n\n        this.closeModal = this.closeModal.bind(this);\n    }\n\n    render() {\n        const style = {\n            float: 'right',\n            margin: \"0 5px\"\n        };\n        return (\n        <div>\n            <Card\n                title={this.props.title}\n                extra={toFormattedDateString(this.props.date)}\n                style={{marginBottom: \"5px\", marginRight: \"10px\"}}\n            >\n                {this.props.description}\n                <Button style={style} onClick={this.showDeleteConfirm} icon=\"delete\"/>\n                <Button style={style} onClick={this.editJobOnClick} icon=\"form\"/>\n                    <Modal\n                        title=\"Edit Job\"\n                        visible={this.state.editJobModalVisible}\n                        onCancel={this.handleJobCancel}\n                        footer={[\n                            null,\n                          ]}\n                        > \n                        <EditJob jobId={this.props.jobId} closeModal={this.closeModal}/>\n                    </Modal>\n                    \n            </Card>\n        </div>\n        )\n    }\n\n    editJobOnClick = (e) => {\n        this.setState({editJobModalVisible: true});\n    }\n\n    handleJobCancel = (e) => {\n        this.setState({editJobModalVisible: false});\n    }\n\n    closeModal(){\n        this.props.modifyState();\n        this.setState({editJobModalVisible: false});\n    }\n\n    showDeleteConfirm = () => {\n        var token = this.props.token;\n        var jobId = this.props.jobId;\n        var closeModal = this.props.modifyState;\n        var deleteJob = this.props.deleteJob;\n        confirm({\n          title: 'Are you sure delete this job?',\n          okText: 'Yes',\n          okType: 'danger',\n          cancelText: 'No',\n          onOk() {\n            deleteJob(token, jobId);\n            closeModal();\n            console.log(token);\n            console.log('Ok');\n          },\n          onCancel() {\n            console.log('Cancel');\n          },\n        });\n      }\n}\n\nfunction toFormattedDateString(dateString) {\n    const date = new Date(dateString)\n    var MM = date.getMonth() + 1\n    var dd = date.getDate()\n    var yyyy = date.getFullYear()\n    var hh = date.getHours()\n    var mm = date.getMinutes()\n    var ss = date.getSeconds()\n\n    return `${MM}/${dd}/${yyyy} ${hh}:${mm}:${ss}`\n}\n\nconst mapStateToProps = state => ({\n   \n})\n\nexport default connect(mapStateToProps, { deleteJob })(UserJobCard);\n","import React, { Component } from 'react'\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport {fetchJobs} from '../../actions/JobAction';\nimport UserJobCard from './UserJobCard';\n\nclass UserJobList extends Component {\n    constructor(){\n        super();\n        this.state = {modifiedState: false};\n\n        this.modifyState = this.modifyState.bind(this);\n    }\n\n\n    componentWillMount() {\n        this.props.fetchJobs(this.props.token);\n    }\n\n    render() {\n\n        if( this.props.jobs !== undefined){\n\n        this.props.jobs.sort(function(job1,job2){\n            return new Date(job1.modifyTime) - new Date(job2.modifyTime);\n        });\n\n        let jobs = this.props.jobs.filter( job => job.peopleId === this.props.id);\n\n        const jobItems = jobs.map(job => (\n            <div key={job.id}>\n                <UserJobCard token={this.props.token} jobId={job.id} title={job.title} description={job.description} date={job.modifyTime} modifyState={this.modifyState}/>\n            </div>\n        ));\n        return (\n        <div>\n            {jobItems}\n        </div>\n        );\n        }\n        return(<div></div>);\n    }\n\n    modifyState(){\n        this.setState({modifiedState: !this.state.modifiedState});\n        this.props.fetchJobs(this.props.token);\n    }\n}\n\nUserJobList.propTypes = {\n    fetchJobs: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n    token: state.user.user.token,\n    id: state.user.user.id,\n    jobs: state.job.jobs,\n    error: state.job.error\n  })\n\nexport default connect(mapStateToProps, { fetchJobs })(UserJobList);","import React, { Component } from 'react';\nimport { Avatar } from 'antd';\n\nimport {Majors} from '../../declaration/major';\nimport {Standings} from '../../declaration/standing';\n\nimport '../../style/Profile/userInfo.css';\n\nexport default class UserInfo extends Component {\n\n    render() {\n        return (\n            <div className=\"userInfoContainer\">\n                {this.props.user.image == null ? <Avatar size={100} icon=\"user\"/> : <Avatar src={this.props.user.image}/>}\n                <h3>{this.props.user.firstname + \" \" + this.props.user.lastname}</h3>\n                {standingOptions(this.props.user.standing)}\n                {majorOptions(this.props.user.majors)}\n                <h4>{this.props.user.email}</h4>\n            </div>\n        )\n    }\n}\n\nfunction majorOptions(majors) {\n    var majorView = [];\n    if(majors != null && majors !== undefined){\n        majors.forEach( (elem, index) => {\n            majorView.push(<h4 key={index}>{Majors[elem]}</h4>)\n        });\n        return majorView;\n    }\n    else{\n        return undefined;\n    }\n  }\n  \n  function standingOptions(standing) {\n    if(standing != null && standing !== undefined){\n        return(\n            <h4>{Standings[standing]}</h4>\n        );\n    }\n    else{\n        return undefined;\n    }\n  }\n\n\n","import React, { Component } from 'react'\nimport {connect} from 'react-redux'\n\nimport UserFeedList from './UserFeedList';\nimport UserJobList from './UserJobList';\nimport { Radio } from 'antd';\nimport UserInfo from './UserInfo';\n\nimport '../../style/Profile/userInfo.css';\n\nconst RadioButton = Radio.Button;\nconst RadioGroup = Radio.Group;\n\n\n\nclass Profile extends Component {\n    constructor(){\n        super();\n        this.state = {jobsView: false};\n    }\n\n    render() {\n        return (\n            <div>\n                { this.renderProfile() }\n            </div>\n        )\n    }\n\n    radioOnChange = (e) => {\n        if(this.state.jobsView){\n            this.setState({ jobsView: false});\n        }\n        else{\n            this.setState({ jobsView: true});\n        }\n        \n    }\n\n    renderProfile() {\n        return(\n            <div className=\"profileContainer\">\n                <UserInfo user={this.props.user}/>\n                <div style={{float: \"left\", width: \"80%\"}}>\n                    <div className=\"post-jobs-button-group\">  \n                        <RadioGroup className=\"btn-group btn-group-toggle\" defaultValue=\"posts\" onChange={this.radioOnChange} style={{marginBottom: \"30px\"}} >\n                            <RadioButton className=\"btn btn-secondary\" value=\"posts\">Posts</RadioButton>\n                            <RadioButton className=\"btn btn-secondary\" value=\"jobs\">Jobs</RadioButton>\n                        </RadioGroup>\n                    </div>\n                    {this.state.jobsView ? this.displayJobs() : this.displayPosts()}\n                </div>\n            </div>\n        );\n    }\n\n    displayJobs(){\n        return(<div><UserJobList /></div>);\n    }\n\n    displayPosts(){\n        return(<div><UserFeedList /></div>);\n\n    }\n}\n\nconst mapStateToProps = state => ({\n    user: state.user.user\n})\n\nexport default connect(mapStateToProps, {})(Profile);","import React, { Component } from 'react'\nimport {Redirect} from 'react-router-dom'\nimport {connect} from 'react-redux'\n\nimport { Layout } from 'antd';\n\nimport Profile from './Profile'\n\nimport Navbar from '../Navbar';\n\nconst {\n    Content, Sider, Header,\n  } = Layout;\n\nclass ProfileWithLayout extends Component {\n    render() {\n        return (\n            <div>\n                {\n                    this.props.user.token ? \n                    renderProfile(): \n                    <Redirect to='/Login' />\n                }\n            </div>\n        )\n    }\n}\n\nfunction renderProfile() {\n    return(\n        //try layout\n        <div>\n            <Layout>\n            <Header style={{background:'#c1e791', position: 'fixed', zIndex: 1, width: '100%' }}><h1 style={{color:'white'}}>ResearchTree</h1></Header>\n                <Layout>\n                    <Sider style={{marginTop: '5%'}}>\n                        <Navbar pageNum={['4']} />\n                    </Sider>\n                    <Content style={{marginTop: '6%'}}>\n                        <Profile />\n                    </Content>\n                </Layout>\n            </Layout>\n        </div>\n    );\n}\n\nconst mapStateToProps = state => ({\n    user: state.user.user\n})\n\nexport default connect(mapStateToProps, {})(ProfileWithLayout);","import React, { Component } from 'react'\n\nimport { Card } from 'antd';\n\n\nexport default class JobCard extends Component {\n\n    render() {\n        return (\n        <div>\n            <Card\n                title={this.props.title}\n                extra={toFormattedDateString(this.props.date)}\n                style={{margin: \"10px\"}}\n            >\n                {this.props.description}\n                {this.props.major}\n            </Card>\n        </div>\n        )\n    }\n}\n\nfunction toFormattedDateString(dateString) {\n    const date = new Date(dateString)\n    var MM = date.getMonth() + 1\n    var dd = date.getDate()\n    var yyyy = date.getFullYear()\n    var hh = date.getHours()\n    var mm = date.getMinutes()\n    var ss = date.getSeconds()\n\n    return `${MM}/${dd}/${yyyy} ${hh}:${mm}:${ss}`\n}","import React, { Component } from 'react'\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport {fetchJobs} from '../../actions/JobAction';\nimport JobCard from './JobCard';\n\nclass JobList extends Component {\n\n    componentWillMount() {\n        this.props.fetchJobs(this.props.token);\n    }\n\n    render() {\n\n        if( this.props.jobs !== undefined){\n\n        this.props.jobs.sort(function(job1,job2){\n            return new Date(job1.modifyTime) - new Date(job2.modifyTime);\n        });\n        let jobs = this.props.jobs;\n\n\n        const jobItems = jobs.map(job => (\n            <div key={job.id}>\n                <JobCard title={job.title} description={job.description} date={job.modifyTime} major={job.major} />\n            </div>\n        ));\n        return (\n        <div>\n            {jobItems}\n        </div>\n        );\n        }\n        return(<div></div>);\n    }\n\n}\n\nJobList.propTypes = {\n    fetchJobs: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n    token: state.user.user.token,\n    jobs: state.job.jobs,\n    error: state.job.error\n  })\n\nexport default connect(mapStateToProps, { fetchJobs })(JobList);","import React, { Component } from 'react'\n\nimport {\n    Form, Icon, Input, Button, Select\n} from 'antd';\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport {newJob, fetchJobs} from '../../actions/JobAction'\nimport {Majors} from '../../declaration/major';\n\nimport '../../style/Feed/postFeed.css';\n\nconst { TextArea } = Input;\nconst { Option } = Select;\n\nclass PostJob extends Component {\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n                values[\"PeopleId\"] = `${this.props.user.id}`;\n                this.props.newJob(this.props.user.token, values);\n            }\n        });\n    }\n\n    validateMajorsMaxLimit = (rule, value, callback) => {\n        if (value.length > 3) {\n          callback('Max 3 Majors')\n        } else {\n          callback()\n        }\n      }\n\n      validateLocationZipCode = (rule, value, callback) => {\n        const pattern = /^(\\d{5})?$/\n        if (!pattern.test(value)) {\n          callback('Not a valid ZipCode, must be 5 digits')\n        } else {\n          callback()\n        }\n      }\n    \n    render() {\n        // if (!this.props.isLoading) {\n        //     this.props.fetchPosts(this.props.user.token)\n        // } \n        const { getFieldDecorator } = this.props.form;\n        return (\n          <Form onSubmit={this.handleSubmit} className=\"post-feed\">\n            <Form.Item style={{margin: \"10px\"}}>\n              {getFieldDecorator('Title', {\n                rules: [{ required: true, message: 'Please input a title!' }],\n              })(\n                <Input prefix={<Icon type=\"team\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Title\" />\n              )}\n            </Form.Item>\n            <Form.Item style={{margin: \"10px\"}}>\n              {getFieldDecorator('Description', {\n                rules: [{ required: true, message: 'Please input your Description!' }],\n              })(\n                <TextArea placeholder=\"Description\" autosize={{ minRows: 2, maxRows: 6 }} />\n                )}\n            </Form.Item>\n            <Form.Item\n              label=\"Majors\"\n              style={{margin: \"10px\"}}\n            >\n              {getFieldDecorator('Majors', {\n                rules: [\n                  { required: true, message: 'Please select your majors!', type: 'array' },\n                  { validator: this.validateMajorsMaxLimit },\n                ],\n              })(\n                majorOptions()\n              )}\n          </Form.Item>\n          <Form.Item\n              label=\"Location\"\n              style={{margin: \"10px\"}}\n            >\n              {getFieldDecorator('Location', {\n                rules: [\n                  { required: true, message: 'Please input your location!', whitespace: true },\n                  { validator: this.validateLocationZipCode },\n                ],\n              })(\n                <Input placeholder=\"ZipCode\" />\n              )}\n          </Form.Item>\n            <Form.Item style={{margin: \"10px\"}}>\n              <Button type=\"primary\" htmlType=\"submit\" >\n                Create\n              </Button>\n            </Form.Item>\n          </Form>\n        );\n    }\n}\n\nfunction majorOptions() {\n    var majors = [];\n    for (var i = 0; i < Majors.length; i++) {\n      majors.push(<Option key={i} value={i}>{Majors[i]}</Option>)\n    }\n    return (\n      <Select mode=\"multiple\" placeholder=\"Please select majors\">\n        {majors}\n      </Select>\n    );\n  }\n\nPostJob.propTypes = {\n    newJob: PropTypes.func.isRequired,\n    fetchJobs: PropTypes.func.isRequired\n}\n\n\n\nconst mapStateToProps = state => ({\n    user: state.user.user,\n    jobs: state.job.jobs,\n    isLoading: state.feed.isLoading,\n    error: state.feed.error\n})\n    \nconst JobForm = Form.create({ name: 'job_form' })(PostJob);\n\nexport default connect(mapStateToProps, { fetchJobs, newJob })(JobForm);","import React, { Component } from 'react'\n\nimport JobList from './JobList'\nimport PostJob from './PostJob';\n\nclass Job extends Component {\n    render() {\n        return (\n            <div>\n                <PostJob />\n                <hr style={{margin: \"10px\"}}/>\n                <JobList />\n            </div>\n        )\n    }\n}\n\nexport default Job;","import React, { Component } from 'react'\nimport {Redirect} from 'react-router-dom'\nimport {connect} from 'react-redux'\n\nimport { Layout } from 'antd';\n\nimport Navbar from '../Navbar';\n\nimport Job from './Job';\n\nconst {\n    Content, Sider, Header,\n  } = Layout;\n\nclass JobWithLayout extends Component {\n    render() {\n        return (\n            <div>\n                {\n                    this.props.user.token ?\n                        renderJob() :\n                        <Redirect to='/Login' />\n                }\n            </div>\n        )\n    }\n}\n\nfunction renderJob() {\n    return(\n        <div>\n            <Layout>\n            <Header style={{background:'#c1e791', position: 'fixed', zIndex: 1, width: '100%' }}><h1 style={{color:'white'}}>ResearchTree</h1></Header>\n                <Layout>\n                    <Sider style={{marginTop: '5%'}}>\n                        <Navbar pageNum={['3']} />\n                    </Sider>\n                    <Content style={{marginTop: '6%'}}>\n                        <Job />\n                    </Content>\n                </Layout>\n            </Layout>\n        </div>\n    );\n}\n\nconst mapStateToProps = state => ({\n    user: state.user.user\n})\n\nexport default connect(mapStateToProps, {})(JobWithLayout);\n","import { LOG_IN, SIGN_UP, ACCOUNT_ERROR, CLEAR_ACCOUNT_ERROR } from '../actions/types';\n\nconst initialState = {\n    user: {},\n    error: null\n};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case LOG_IN:\n            return {\n                ...state,\n                user: action.payload\n            };\n        case SIGN_UP:\n            return {\n                ...state,\n                user: action.payload\n            }\n        case CLEAR_ACCOUNT_ERROR:\n            return {\n                ...state,\n                error: action.payload\n            };\n        case ACCOUNT_ERROR:\n            return {\n                ...state,\n                error: action.payload\n            };\n        default:\n            return state;\n    }\n}","import { FETCH_POSTS, NEW_POST, POST_ERROR, CLEAR_POST_ERROR, POST_START, POST_COMPLETE, EDIT_POST, EDIT_POST_START, EDIT_POST_ERROR, CLEAR_EDIT_POST_ERROR, EDIT_POST_COMPLETE, DELETE_POST, DELETE_POST_START, DELETE_POST_ERROR, CLEAR_DELETE_POST_ERROR, DELETE_POST_COMPLETE } from '../actions/types';\n\nconst initialState = {\n    feeds: [],\n    newPost: {},\n    editPost: {},\n    deletePost: {},\n    isLoading: false,\n    error: null\n};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case FETCH_POSTS:\n            return {\n                ...state,\n                feeds: action.payload\n            };\n        case NEW_POST:\n            return {\n                ...state,\n                newPost: action.payload\n            };\n        case POST_ERROR:\n            return {\n                ...state,\n                error: action.payload\n            }\n        case CLEAR_POST_ERROR:\n            return {\n                ...state,\n                error: action.payload\n            };\n        case POST_START:\n            return {\n                ...state,\n                isLoading: action.payload\n            };\n        case POST_COMPLETE:\n            return {\n                ...state,\n                isLoading: action.payload\n            };\n        case EDIT_POST:\n            return {\n                ...state,\n                editPost: action.payload\n            };\n        case EDIT_POST_START:\n            return {\n                ...state,\n                isLoading: action.payload\n            };\n        case EDIT_POST_ERROR:\n            return {\n                ...state,\n                error: action.payload\n            }\n        case CLEAR_EDIT_POST_ERROR:\n            return {\n                ...state,\n                error: action.payload\n            };\n        case EDIT_POST_COMPLETE:\n            return {\n                ...state,\n                isLoading: action.payload\n            };  \n        case DELETE_POST:\n            return {\n                ...state,\n                deletePost: action.payload\n            };\n        case DELETE_POST_START:\n            return {\n                ...state,\n                isLoading: action.payload\n            };\n        case DELETE_POST_ERROR:\n            return {\n                ...state,\n                error: action.payload\n            }\n        case CLEAR_DELETE_POST_ERROR:\n            return {\n                ...state,\n                error: action.payload\n            };\n        case DELETE_POST_COMPLETE:\n            return {\n                ...state,\n                isLoading: action.payload\n            };     \n        default:\n            return state;\n    }\n}","import { FETCH_USERS, PEOPLE_ERROR, CLEAR_PEOPLE_ERROR } from '../actions/types';\n\nconst initialState = {\n    users: [],\n    error: null\n};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case FETCH_USERS:\n            return {\n                ...state,\n                users: action.payload\n            };\n        case PEOPLE_ERROR:\n            return {\n                ...state,\n                error: action.payload\n            }\n        case CLEAR_PEOPLE_ERROR:\n            return {\n                ...state,\n                error: action.payload\n            }\n        default:\n            return state;\n    }\n}","import { FETCH_JOBS, NEW_JOB, JOB_ERROR, CLEAR_JOB_ERROR, JOB_START, JOB_COMPLETE, EDIT_JOB_START, EDIT_JOB_ERROR, EDIT_JOB_COMPLETE, EDIT_JOB, CLEAR_EDIT_JOB_ERROR, DELETE_JOB, DELETE_JOB_START, DELETE_JOB_ERROR, CLEAR_DELETE_JOB_ERROR, DELETE_JOB_COMPLETE } from '../actions/types';\n\nconst initialState = {\n    jobs: [],\n    newJob: {},\n    editJob: {},\n    deleteJob: {},\n    isLoading: false,\n    error: null\n};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case FETCH_JOBS:\n            return {\n                ...state,\n                jobs: action.payload\n            };\n        case NEW_JOB:\n            return {\n                ...state,\n                newJob: action.payload\n            };\n        case JOB_ERROR:\n            return {\n                ...state,\n                error: action.payload\n            }\n        case CLEAR_JOB_ERROR:\n            return {\n                ...state,\n                error: action.payload\n            };\n        case JOB_START:\n            return {\n                ...state,\n                isLoading: action.payload\n            };\n        case JOB_COMPLETE:\n            return {\n                ...state,\n                isLoading: action.payload\n            };\n        case EDIT_JOB:\n            return {\n                ...state,\n                editJob: action.payload\n            };\n        case EDIT_JOB_START:\n            return {\n                ...state,\n                isLoading: action.payload\n            };\n        case EDIT_JOB_ERROR:\n            return {\n                ...state,\n                error: action.payload\n            }\n        case CLEAR_EDIT_JOB_ERROR:\n            return {\n                ...state,\n                error: action.payload\n            };\n        case EDIT_JOB_COMPLETE:\n            return {\n                ...state,\n                isLoading: action.payload\n            };\n        case DELETE_JOB:\n            return {\n                ...state,\n                deleteJob: action.payload\n            };\n        case DELETE_JOB_START:\n            return {\n                ...state,\n                isLoading: action.payload\n            };\n        case DELETE_JOB_ERROR:\n            return {\n                ...state,\n                error: action.payload\n            }\n        case CLEAR_DELETE_JOB_ERROR:\n            return {\n                ...state,\n                error: action.payload\n            };\n        case DELETE_JOB_COMPLETE:\n            return {\n                ...state,\n                isLoading: action.payload\n            };\n        \n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport AccountReducer from './AccountReducer';\nimport FeedReducer from './FeedReducer';\nimport PeopleReducer from './PeopleReducer';\nimport JobReducer from './JobReducer';\n\nexport default combineReducers({\n    user: AccountReducer,\n    feed: FeedReducer,\n    people: PeopleReducer,\n    job: JobReducer\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n        applyMiddleware(...middleware),\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n);\n\nexport default store;","import ReactDOM from 'react-dom';\nimport React from 'react';\n\nimport {Provider} from 'react-redux';\nimport {BrowserRouter,Route,Switch,Redirect} from 'react-router-dom';\n\nimport LoginForm from './components/Account/Login';\nimport Signup from './components/Account/Signup';\nimport FeedWithLayout from './components/Feed/FeedWithLayout';\nimport PeopleWithLayout from './components/People/PeopleWithLayout';\nimport ProfileWithLayout from './components/Profile/ProfileWithLayout';\nimport JobWithLayout from './components/Job/JobWithLayout';\n\nimport store from './store';\n\nimport './style/index.css';\n\nReactDOM.render(\n    (<Provider store={store}>\n        <BrowserRouter>\n            <div>\n                <Switch>\n                    <Route exact path='/Login' component={LoginForm}></Route>\n                    <Route path='/Feed' component={FeedWithLayout}></Route>\n                    <Route path='/People' component={PeopleWithLayout}></Route>\n                    <Route path='/Signup' component={Signup}></Route>\n                    <Route path='/Job' component={JobWithLayout}></Route>                \n                    <Route path='/Profile' component={ProfileWithLayout}></Route>  \n                    <Redirect to='/Feed'></Redirect>\n                </Switch>\n            </div>\n        </BrowserRouter>\n        </Provider>),        \n    document.getElementById('root')\n)\n\n"],"sourceRoot":""}